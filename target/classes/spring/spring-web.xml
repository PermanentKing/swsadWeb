<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        ">

    <context:component-scan base-package="com.swsadWeb"/>


    <!-- Shiro提供了相应的注解实现权限控制，但是需要AOP功能的支持
        定义AOP切面，用于代理如@RequiresRole注解的控制器，进行权限控制
   -->
    <aop:config proxy-target-class="true"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!-- 配置springMVC -->
    <!-- 1：开启springMVC注解模式 -->
    <!-- 简化配置：
         (1)自动注册DefaultAnnotationHandlerMapping，AnnotationMethodHandlerAdapter
         (2)提供一系列：数据绑定，数字和日期的format  @NumberFormat,@DataTimeFormat
        xml,json默认读写支持
     -->
    <mvc:annotation-driven/>

    <!--mvc:annotation-driven 会自动注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个实例-->
    <!-- 1:HandlerMapping -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>-->
    <!-- 2:HandlerAdapter -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>-->

    <!-- Tips: -->
    <!-- HandlerMapping:处理映射器，为用户发送的请求找到合适的Handler Adapter -->
    <!-- HandlerAdapter:可以简单的理解为调用Controller中的方法 -->

    <!--ViewResolver:视图解析器,Controller会返回一个view，这个view是String类型的逻辑视图名。
    我们需要根据这个逻辑视图名找到物理视图。ViewResolver就定义了怎么找物理视图。
    ViewResolver指定了物理视图的前缀和后缀，这样根据逻辑视图名就能拼出物理视图。
    比如说Controller返回"home"。那么物理视图就是 /WEB-INF/view/home.jsp -->

    <!-- 四种HandlerMapping -->
    <!-- DefaultAnnotationHandlerMapping / SimpleUrlHandlerMapping / BeanNameUrlHandlerMapping / ControllerClassNameHandlerMapping -->
    <!-- 基于注解的方式配置Controller / 显示的指定url对应关系 / 基于BeanName找到Controller / 基于Controller的Class Name来找到Controller -->


    <!-- 静态资源默认servlet配置 -->
    <mvc:default-servlet-handler/>

    <!-- 2：配置jsp显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 控制器异常处理，用来处理权限、角色验证失败出现的UnauthorizedException异常 -->
    <bean id="exceptionHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>
    <bean class="com.swsadWeb.exception.DefaultExceptionHandler"/>



    <!-- 上传文件 -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 最大内存大小 -->
        <property name="maxInMemorySize" value="10240"/>
        <!-- 最大文件大小，-1为不限制大小 -->
        <!--设置上传文件的最大尺寸为10MB 10*1024*1024-->
        <property name="maxUploadSize" value="10485760"/>
        <property name="uploadTempDir" value="/uploadTemp"/>
    </bean>



    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"-->
          <!--p:ignoreDefaultModelOnRedirect="true">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 3：扫描web相关的bean -->
    <context:component-scan base-package="com.swsadWeb.controller" />

    <mvc:resources location="/resources/js/" mapping="/js/**" />

    <mvc:resources location="/resources/css/" mapping="/css/**"/>

    <mvc:resources location="/resources/images/" mapping="/images/**"/>

    <mvc:resources location="WEB-INF/jsp/static/" mapping="/static/**"/>



    <!-- 配置注解扫描，用于ajax的注解扫描 -->
</beans>